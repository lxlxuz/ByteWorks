local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\115\27","\122\93\53\41"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v124=0;local v125;while true do if (v124==0) then v125=v13(v103,v30);v30=nil;v124=1;end if (v124==1) then return v125;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/(2^(v44-1)))%(2^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + (5 -3) ;v48=1;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then v58=1 -0 ;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==2) then v60=v31(v57,459 -(145 + 293) ,31);v61=((v31(v57,32)==(431 -(44 + 386))) and  -1) or 1 ;v55=3;end if (0==v55) then v56=v34();v57=v34();v55=1;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/(0 -0)))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==2) then v65={};for v114=1, #v64 do v65[v114]=v10(v9(v11(v64,v114,v114)));end v63=3;end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=1;end if (3==v63) then return v14(v65);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=0;local v81;local v82;while true do if (v80==1) then if (v81==1) then v82=v32()~=0 ;elseif (v81==(1488 -(998 + 488))) then v82=v35();elseif (v81==3) then v82=v36();end v71[v79]=v82;break;end if (v80==0) then v81=v32();v82=nil;v80=1;end end end v69[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,1,620 -(555 + 64) )==0) then local v110=0;local v111;local v112;local v113;while true do if (v110==2) then if (v31(v112,1,1)==1) then v113[2]=v71[v113[2]];end if (v31(v112,2,2)==1) then v113[3]=v71[v113[930 -(214 + 713) ]];end v110=3;end if (v110==0) then v111=v31(v84,2,1 + 2 );v112=v31(v84,4,6);v110=1;end if (v110==3) then if (v31(v112,3,1 + 2 )==1) then v113[4]=v71[v113[4]];end v66[v83]=v113;break;end if (v110==1) then v113={v33(),v33(),nil,nil};if (v111==0) then local v132=0;while true do if (0==v132) then v113[3]=v33();v113[4]=v33();break;end end elseif (v111==1) then v113[571 -(367 + 201) ]=v34();elseif (v111==2) then v113[3 + 0 ]=v34() -(2^(788 -(201 + 571))) ;elseif (v111==3) then v113[3]=v34() -(2^16) ;v113[4]=v33();end v110=2;end end end end for v85=1,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1139 -(116 + 1022) ];local v77=v73[2];local v78=v73[3];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -(4 -3);local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v108=0,v95 do if (v108>=v89) then v93[v108-v89 ]=v94[v108 + 1 + 0 ];else v97[v108]=v94[v108 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v109=0;while true do if (v109==0) then v99=v87[v91];v100=v99[1];v109=1;end if (v109==1) then if (v100<=44) then if (v100<=21) then if (v100<=10) then if (v100<=4) then if (v100<=1) then if (v100==0) then local v139=0;local v140;while true do if (v139==0) then v140=v99[2];v97[v140]=v97[v140](v21(v97,v140 + (3 -2) ,v92));break;end end elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=2) then local v141=0;local v142;while true do if (0==v141) then v142=v99[2];v97[v142]=v97[v142](v21(v97,v142 + 1 ,v99[3]));break;end end elseif (v100==3) then local v189=v99[2];v97[v189]=v97[v189]();else local v191=0;local v192;local v193;local v194;local v195;while true do if (v191==0) then v192=v99[2];v193,v194=v90(v97[v192](v97[v192 + (878 -(282 + 595)) ]));v191=1;end if (v191==2) then for v384=v192,v92 do v195=v195 + 1 + 0 ;v97[v384]=v193[v195];end break;end if (1==v191) then v92=(v194 + v192) -(1638 -(1523 + 114)) ;v195=0;v191=2;end end end elseif (v100<=7) then if (v100<=5) then do return v97[v99[2]];end elseif (v100==6) then local v196=v99[2];v97[v196]=v97[v196]();elseif (v97[v99[2 -0 ]]~=v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=8) then if (v97[v99[2]]~=v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>9) then v97[v99[861 -(814 + 45) ]][v97[v99[3]]]=v97[v99[4]];else v97[v99[2]]=v97[v99[3]][v99[1069 -(68 + 997) ]];end elseif (v100<=15) then if (v100<=12) then if (v100==11) then local v143=0;local v144;local v145;local v146;while true do if (v143==1) then v146=v97[v144 + 2 ];if (v146>0) then if (v145>v97[v144 + 1 ]) then v91=v99[3];else v97[v144 + 3 ]=v145;end elseif (v145<v97[v144 + 1 ]) then v91=v99[1 + 2 ];else v97[v144 + 3 ]=v145;end break;end if (v143==0) then v144=v99[2];v145=v97[v144];v143=1;end end else v97[v99[2]]={};end elseif (v100<=(5 + 8)) then local v148=v99[2];local v149=v97[v148 + 2 ];local v150=v97[v148] + v149 ;v97[v148]=v150;if (v149>0) then if (v150<=v97[v148 + 1 ]) then local v338=0;while true do if (v338==0) then v91=v99[3];v97[v148 + 3 ]=v150;break;end end end elseif (v150>=v97[v148 + 1 ]) then local v339=0;while true do if (v339==0) then v91=v99[888 -(261 + 624) ];v97[v148 + (1273 -(226 + 1044)) ]=v150;break;end end end elseif (v100==14) then local v203=0;local v204;local v205;while true do if (v203==0) then v204=v99[3];v205=v97[v204];v203=1;end if (v203==1) then for v387=v204 + (4 -3) ,v99[4] do v205=v205   .. v97[v387] ;end v97[v99[2]]=v205;break;end end else v97[v99[2]]=v97[v99[120 -(32 + 85) ]];end elseif (v100<=18) then if (v100<=16) then local v152=0;local v153;while true do if (v152==0) then v153=v99[2];v97[v153](v21(v97,v153 + 1 ,v92));break;end end elseif (v100>17) then v97[v99[2]]=v74[v99[3]];else for v312=v99[2],v99[3] do v97[v312]=nil;end end elseif (v100<=19) then v97[v99[2]]=v97[v99[3]] + v99[4] ;elseif (v100>(35 -15)) then v97[v99[2]]=v99[1083 -(1020 + 60) ]~=0 ;else v97[v99[2]]=v75[v99[3]];end elseif (v100<=32) then if (v100<=26) then if (v100<=23) then if (v100>(1445 -(630 + 793))) then v97[v99[2]]= #v97[v99[3]];else v97[v99[6 -4 ]]=v97[v99[3]]%v99[4] ;end elseif (v100<=(24 + 0)) then local v157=0;local v158;while true do if (0==v157) then v158=v99[2];v97[v158]=v97[v158](v97[v158 + 1 ]);break;end end elseif (v100==25) then v97[v99[9 -7 ]][v97[v99[3]]]=v97[v99[4]];else v97[v99[2]]=v99[1 + 2 ] + v97[v99[4]] ;end elseif (v100<=29) then if (v100<=27) then if v97[v99[2]] then v91=v91 + (958 -(892 + 65)) ;else v91=v99[3];end elseif (v100>28) then v97[v99[4 -2 ]]=v97[v99[2 + 1 ]][v99[13 -9 ]];else local v219=v88[v99[3]];local v220;local v221={};v220=v18({},{[v7("\145\141\11\61\255\171\170","\155\206\210\98\83")]=function(v316,v317) local v318=0;local v319;while true do if (v318==0) then v319=v221[v317];return v319[1][v319[2]];end end end,[v7("\107\49\66\127\67\7\66\126\81\22","\26\52\110\44")]=function(v320,v321,v322) local v323=0;local v324;while true do if (v323==0) then v324=v221[v321];v324[1][v324[3 -1 ]]=v322;break;end end end});for v325=1,v99[1751 -(760 + 987) ] do local v326=0;local v327;while true do if (v326==1) then if (v327[1]==30) then v221[v325-1 ]={v97,v327[3]};else v221[v325-1 ]={v74,v327[3]};end v96[ #v96 + (1 -0) ]=v221;break;end if (v326==0) then v91=v91 + (1914 -(1789 + 124)) ;v327=v87[v91];v326=1;end end end v97[v99[2]]=v40(v219,v220,v75);end elseif (v100<=30) then v97[v99[2]]=v97[v99[3]];elseif (v100==(11 + 20)) then local v223=0;local v224;while true do if (v223==0) then v224=v99[2];v97[v224](v21(v97,v224 + 1 ,v99[3]));break;end end else v97[v99[2]]=v99[3];end elseif (v100<=38) then if (v100<=35) then if (v100<=(383 -(87 + 263))) then v97[v99[5 -3 ]]=v97[v99[3]]%v99[15 -11 ] ;elseif (v100>34) then do return;end else v97[v99[1 + 1 ]]=v75[v99[3]];end elseif (v100<=36) then v97[v99[2]]=v74[v99[183 -(67 + 113) ]];elseif (v100>37) then v97[v99[2]]();else v91=v99[3];end elseif (v100<=41) then if (v100<=39) then if (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>40) then local v231=0;local v232;while true do if (v231==0) then v232=v99[2];do return v21(v97,v232,v232 + v99[3] );end break;end end else local v233=0;local v234;while true do if (v233==0) then v234=v99[2];do return v21(v97,v234,v92);end break;end end end elseif (v100<=42) then if  not v97[v99[2 + 0 ]] then v91=v91 + 1 ;else v91=v99[1058 -(87 + 968) ];end elseif (v100>43) then local v236=0;local v237;while true do if (0==v236) then v237=v99[2];do return v21(v97,v237,v92);end break;end end else local v238=0;local v239;local v240;local v241;while true do if (v238==1) then v241=0;for v393=v239,v99[4] do local v394=0;while true do if (0==v394) then v241=v241 + 1 ;v97[v393]=v240[v241];break;end end end break;end if (v238==0) then v239=v99[2];v240={v97[v239](v97[v239 + 1 ])};v238=1;end end end elseif (v100<=67) then if (v100<=55) then if (v100<=(215 -166)) then if (v100<=46) then if (v100>45) then do return v97[v99[2]]();end else v91=v99[3 + 0 ];end elseif (v100<=47) then v97[v99[2 + 0 ]]=v99[6 -3 ];elseif (v100==48) then local v242=0;local v243;local v244;local v245;while true do if (v242==1) then v245=v97[v243 + 2 ];if (v245>0) then if (v244>v97[v243 + 1 ]) then v91=v99[7 -4 ];else v97[v243 + (1416 -(447 + 966)) ]=v244;end elseif (v244<v97[v243 + (2 -1) ]) then v91=v99[3];else v97[v243 + 3 ]=v244;end break;end if (v242==0) then v243=v99[2];v244=v97[v243];v242=1;end end else local v246=0;local v247;while true do if (v246==0) then v247=v99[2];do return v97[v247](v21(v97,v247 + 1 ,v99[3]));end break;end end end elseif (v100<=52) then if (v100<=50) then if (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>51) then local v249=0;local v250;while true do if (v249==0) then v250=v99[2];v97[v250]=v97[v250](v21(v97,v250 + 1 ,v99[3]));break;end end else local v251=0;local v252;local v253;local v254;local v255;while true do if (v251==0) then v252=v99[2];v253,v254=v90(v97[v252](v21(v97,v252 + 1 ,v99[3])));v251=1;end if (v251==1) then v92=(v254 + v252) -1 ;v255=0;v251=2;end if (v251==2) then for v395=v252,v92 do local v396=0;while true do if (v396==0) then v255=v255 + 1 ;v97[v395]=v253[v255];break;end end end break;end end end elseif (v100<=53) then local v167=v99[1819 -(1703 + 114) ];local v168,v169=v90(v97[v167](v21(v97,v167 + 1 ,v92)));v92=(v169 + v167) -1 ;local v170=0;for v186=v167,v92 do local v187=0;while true do if (v187==0) then v170=v170 + 1 ;v97[v186]=v168[v170];break;end end end elseif (v100>(755 -(376 + 325))) then local v256=0;local v257;local v258;while true do if (v256==0) then v257=v99[2 -0 ];v258=v97[v257];v256=1;end if (v256==1) then for v397=v257 + 1 + 0 ,v92 do v15(v258,v97[v397]);end break;end end else for v328=v99[2],v99[3] do v97[v328]=nil;end end elseif (v100<=61) then if (v100<=58) then if (v100<=56) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>57) then local v260=v99[2];v97[v260](v97[v260 + 1 ]);else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=(181 -122)) then local v171=0;local v172;while true do if (v171==0) then v172=v99[2];do return v97[v172](v21(v97,v172 + 1 ,v99[1 + 2 ]));end break;end end elseif (v100==60) then local v262=v99[2];v97[v262]=v97[v262](v97[v262 + (3 -2) ]);else local v264=0;local v265;local v266;local v267;while true do if (v264==2) then for v398=1,v99[4] do local v399=0;local v400;while true do if (v399==0) then v91=v91 + 1 ;v400=v87[v91];v399=1;end if (v399==1) then if (v400[377 -(85 + 291) ]==30) then v267[v398-1 ]={v97,v400[955 -(802 + 150) ]};else v267[v398-(1266 -(243 + 1022)) ]={v74,v400[7 -4 ]};end v96[ #v96 + 1 ]=v267;break;end end end v97[v99[2]]=v40(v265,v266,v75);break;end if (v264==0) then v265=v88[v99[17 -(9 + 5) ]];v266=nil;v264=1;end if (1==v264) then v267={};v266=v18({},{[v7("\40\24\253\86\19\34\236","\56\119\71\148")]=function(v401,v402) local v403=0;local v404;while true do if (v403==0) then v404=v267[v402];return v404[1][v404[2]];end end end,[v7("\208\103\216\246\248\81\216\247\234\64","\147\143\56\182")]=function(v405,v406,v407) local v408=0;local v409;while true do if (v408==0) then v409=v267[v406];v409[1][v409[2]]=v407;break;end end end});v264=2;end end end elseif (v100<=(115 -51)) then if (v100<=(46 + 16)) then local v173=0;local v174;while true do if (v173==0) then v174=v99[2];v97[v174]=v97[v174](v21(v97,v174 + 1 ,v92));break;end end elseif (v100>63) then if (v97[v99[999 -(915 + 82) ]]~=v97[v99[258 -(163 + 91) ]]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[5 -3 ]]=v97[v99[3]]%v97[v99[1934 -(1869 + 61) ]] ;end elseif (v100<=65) then v97[v99[2]]={};elseif (v100>66) then local v269=v99[2];local v270=v97[v99[3]];v97[v269 + 1 ]=v270;v97[v269]=v270[v99[4]];elseif v97[v99[2]] then v91=v91 + 1 + 0 ;else v91=v99[3];end elseif (v100<=78) then if (v100<=(42 + 30)) then if (v100<=(89 -20)) then if (v100>(1255 -(1069 + 118))) then if (v97[v99[6 -4 ]]==v99[4]) then v91=v91 + (1 -0) ;else v91=v99[1 + 2 ];end else v97[v99[2]]();end elseif (v100<=70) then do return v97[v99[2]];end elseif (v100==71) then local v275=0;local v276;local v277;local v278;while true do if (v275==1) then v278=v97[v276] + v277 ;v97[v276]=v278;v275=2;end if (v275==0) then v276=v99[4 -2 ];v277=v97[v276 + (3 -1) ];v275=1;end if (v275==2) then if (v277>0) then if (v278<=v97[v276 + 1 ]) then local v443=0;while true do if (v443==0) then v91=v99[3 + 0 ];v97[v276 + 3 ]=v278;break;end end end elseif (v278>=v97[v276 + 1 ]) then local v444=0;while true do if (v444==0) then v91=v99[3];v97[v276 + 3 ]=v278;break;end end end break;end end else local v279=0;local v280;local v281;local v282;while true do if (v279==1) then v282=0;for v410=v280,v99[1478 -(1329 + 145) ] do local v411=0;while true do if (v411==0) then v282=v282 + 1 ;v97[v410]=v281[v282];break;end end end break;end if (v279==0) then v280=v99[1 + 1 ];v281={v97[v280](v97[v280 + 1 ])};v279=1;end end end elseif (v100<=75) then if (v100<=73) then local v176=0;local v177;local v178;local v179;local v180;while true do if (v176==1) then v92=(v179 + v177) -1 ;v180=1850 -(1409 + 441) ;v176=2;end if (v176==0) then v177=v99[2];v178,v179=v90(v97[v177](v21(v97,v177 + (972 -(140 + 831)) ,v92)));v176=1;end if (v176==2) then for v344=v177,v92 do local v345=0;while true do if (v345==0) then v180=v180 + 1 ;v97[v344]=v178[v180];break;end end end break;end end elseif (v100==74) then do return v97[v99[2]]();end else local v283=0;local v284;local v285;local v286;local v287;while true do if (v283==0) then v284=v99[2];v285,v286=v90(v97[v284](v21(v97,v284 + (1 -0) ,v99[3])));v283=1;end if (2==v283) then for v412=v284,v92 do local v413=0;while true do if (v413==0) then v287=v287 + (792 -(368 + 423)) ;v97[v412]=v285[v287];break;end end end break;end if (1==v283) then v92=(v286 + v284) -(1 + 0) ;v287=0;v283=2;end end end elseif (v100<=76) then local v181=v99[2];v97[v181](v21(v97,v181 + (3 -2) ,v99[3]));elseif (v100==77) then local v288=v99[2];v97[v288](v97[v288 + 1 ]);else local v289=0;local v290;local v291;while true do if (v289==0) then v290=v99[720 -(15 + 703) ];v291=v97[v290];v289=1;end if (v289==1) then for v414=v290 + 1 ,v92 do v15(v291,v97[v414]);end break;end end end elseif (v100<=84) then if (v100<=(38 + 43)) then if (v100<=79) then local v182=0;local v183;while true do if (v182==0) then v183=v99[2];v97[v183](v21(v97,v183 + 1 ,v92));break;end end elseif (v100>80) then local v292=v99[2];local v293,v294=v90(v97[v292](v97[v292 + 1 ]));v92=(v294 + v292) -1 ;local v295=0;for v335=v292,v92 do local v336=0;while true do if (v336==0) then v295=v295 + 1 ;v97[v335]=v293[v295];break;end end end elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(100 -(10 + 8))) then v97[v99[2]]= #v97[v99[3]];elseif (v100>83) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v99[3]~=0 ;end elseif (v100<=(525 -(262 + 176))) then if (v100<=85) then do return;end elseif (v100==(1807 -(345 + 1376))) then local v297=0;local v298;local v299;while true do if (v297==1) then v97[v298 + 1 ]=v299;v97[v298]=v299[v99[4]];break;end if (v297==0) then v298=v99[2];v299=v97[v99[3]];v297=1;end end else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=(338 -250)) then v97[v99[2]]=v97[v99[691 -(198 + 490) ]] + v99[4] ;elseif (v100==89) then if (v97[v99[2]]~=v99[4]) then v91=v91 + 1 ;else v91=v99[13 -10 ];end else local v301=0;local v302;local v303;while true do if (v301==1) then for v417=v302 + (2 -1) ,v99[12 -8 ] do v303=v303   .. v97[v417] ;end v97[v99[1 + 1 ]]=v303;break;end if (v301==0) then v302=v99[445 -(416 + 26) ];v303=v97[v302];v301=1;end end end v91=v91 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
